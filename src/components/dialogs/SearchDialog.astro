---
import { getCollection } from "astro:content";

import { findObjectByKey } from "src/utilities/helpers"

import IconXmark from "src/components/icons/IconXmark_20.astro";
import IconWarningSmall from "src/components/icons/IconWarning_16.astro";
import IconSearch from "src/components/icons/IconSearch_20.astro";
import LinkListItem from "src/components/LinkListItem.astro";

let searchList = [];

// Get all indicator
let allIndicators = await getCollection("indicators");

for (let indicator of allIndicators) {
	let data = JSON.parse(JSON.stringify(indicator.data));
	data.category = 'indicator';
	data.slug = indicator.id;
	searchList.push(data);
}

// Get all indicator components
let allComponents = await getCollection("components");

for (let component of allComponents) {

	let colour = findObjectByKey(allIndicators, 'id', component.data.indicator)?.data.colour;

	let componentData = JSON.parse(JSON.stringify(component.data));
	componentData.category = 'component';
	componentData.colour = colour;
	searchList.push(componentData);

	for (let consideration of component.data['initiating'].considerations) {

		let considerationData = JSON.parse(JSON.stringify(consideration));
		considerationData.category = 'consideration';
		considerationData.indicator = component.data.indicator;
		considerationData.colour = colour;
		searchList.push(considerationData);		

	}

}

// Get all resources
let allResources = await getCollection("resources");

for (let resource of allResources) {

	let data = JSON.parse(JSON.stringify(resource.data));
	data.category = 'resource';
	searchList.push(data);

}

---

<dialog
	id="search-dialog"
	aria-labelledby="search-dialog_heading"
>
	<button
		class="close-dialog"
		type="button"
		aria-label="Close Search Dialog"><IconXmark /></button
	>

	<h2 id="search-dialog_heading" class="heading" data-default-text="Search">
		Search
	</h2>

	<form data-no-value-behaviour="hidden" data-list="site-content-list">

		<fieldset class="search">
			<p
				id="search-dialog_search-input_help"
				class="instructions"
			>
				Search for an Indicator, Component, Consideration, or Resource by entering a valid tag (e.g., 1.0, 2.1, 3.1.1) or title.
			</p>
			<div class="input-container">
				<input
					id="search-dialog_search-input"
					name="search"
					type="text"
					placeholder="Enter search term..."
					aria-labelledby="search-dialog_heading"
					aria-describedby="search-dialog_search-input_help, site-content-list_error"
					autofocus
				/>
				<IconSearch />
			</div>
		</fieldset>
		
	</form>

	<div class="list-container">

		<p id="site-content-list_error" class="error-status" role="status" hidden>
			<IconWarningSmall />
			<span
				>There are no results that match the search term.</span
			>
		</p>

		<ul id="site-content-list" class="link-list" data-style="divided" data-content="mixed" hidden>
			{searchList.map((item) => (
				<LinkListItem itemData={item}/>
			))}
		</ul>

	</div>
	
</dialog>

<style is:global>

	#search-dialog {
		margin-top: 2rem;
	}

</style>


<script>

	import { search } from "src/utilities/list";

	search.init();
	document.addEventListener('astro:before-swap', search.destroy);
	document.addEventListener('astro:after-swap', search.init);

</script>
