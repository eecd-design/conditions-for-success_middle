---
import IconWarningBig from 'src/components/icons/IconWarning_24.astro';
import IconXmark from 'src/components/icons/IconXmark_20.astro';
import Toast from 'src/components/Toast.astro';
import IconCheckmark from '../icons/IconCheckmark_12.astro';
import IconWarningSmall from '../icons/IconWarning_16.astro';
---

<dialog id="edit-status-dialog" aria-describedby="edit-status-dialog_heading">
	<button class="close-dialog" type="button" aria-label="Close Warning Dialog"><IconXmark /></button>

	<h2 id="edit-status-dialog_heading" class="heading" data-default-text="Update Assessment Status">Update Assessment Status</h2>
	<p id="edit-status-dialog_in-progress-instructions" class="instructions">
		This assessment is marked as <strong>In Progress</strong>. Mark it as <strong>Complete</strong> to lock editing and make it available on the Report page.
	</p>
	<p id="edit-status-dialog_complete-instructions" class="instructions" hidden>
		This assessment is marked as <strong>Complete</strong>. Mark it as <strong>In Progress</strong> to unlock editing.
	</p>


	<!-- Success Toast located in Assessment Dialogs -->
	<Toast id={'edit-status-dialog_change-status-toast_failure'} message={`Unable to save. Please reload the page to try again.`} colour={'red'} type={'failure'}>
		<IconWarningSmall slot={'icon'} />
	</Toast>

	<div class="button-group">
		<button class="close-dialog" type="button" data-size="large" data-style="outline">Cancel</button>
		<button
			class="change-status"
			type="button"
			data-style="solid"
			data-size="large"
			data-toast-success="edit-status-dialog_change-status-toast_success"
			data-toast-failure="edit-status-dialog_change-status-toast_failure"
			aria-describedby="edit-status-dialog_in-progress-instructions">Mark as Complete</button
		>
	</div>
</dialog>

<dialog id="status-warning-dialog" aria-describedby="status-warning-dialog_heading">
	<button class="close-dialog" type="button" aria-label="Close Warning Dialog"><IconXmark /></button>

	<h2 id="status-warning-dialog_heading" class="heading" data-default-text="Reopen Assessment for Editing?">Reopen Assessment for Editing?</h2>

	<div class="callout" data-style="solid" data-vibrancy="vivid" data-fit="compact" data-theme="yellow">
		<div class="icon-container">
			<IconWarningBig />
		</div>
		<div class="text-container">
			<p>
				This assessment is marked as <strong>Complete</strong>. To make changes, its status will be updated to <strong>In Progress</strong>.
			</p>
		</div>
	</div>

	<p class="instructions">Do you want to continue?</p>


	<!-- Success Toast located in Assessor Dialogs -->
	<Toast id={'status-warning-dialog_change-status-toast_failure'} message={`Unable to change status. Please reload the page to try again.`} colour={'red'} type={'failure'}>
		<IconWarningSmall slot={'icon'} />
	</Toast>

	<div class="button-group">
		<button class="close-dialog" type="button" data-size="large" data-style="outline">Cancel</button>
		<button
			class="change-status"
			type="button"
			data-style="solid"
			data-size="large"
			data-toast-success="status-warning-dialog_change-status-toast_success"
			data-toast-failure="status-warning-dialog_change-status-toast_failure">Edit Assessment</button
		>
	</div>
</dialog>

<script>
	import { getActiveAssessmentData, setState, setAssessment, subscribe, updateChangeLog } from 'src/stores/userDataStore';
import { dialogControl } from 'src/utilities/dialog';
	import { toastControl } from 'src/utilities/toast';

	//
	// DOM Updates
	//

	let updateEditStatusDialog = (data: UserData) => {
		let dialog = editStatusDialog;
		let assessment = getActiveAssessmentData();
		if (!assessment) return;

		let isComplete = assessment.status === 'Complete';

		let completeInstructions = dialog.querySelector('#edit-status-dialog_complete-instructions');
		let inProgressInstructions = dialog.querySelector('#edit-status-dialog_in-progress-instructions');
		completeInstructions.toggleAttribute('hidden', !isComplete);
		inProgressInstructions.toggleAttribute('hidden', isComplete);

		let btn = dialog.querySelector('button.change-status');

		btn.textContent = isComplete ? 'Mark as In Progress' : 'Mark as Complete';
		btn.setAttribute('aria-describedby', isComplete ? 'edit-status-dialog_complete-instructions' : 'edit-status-dialog_in-progress-instructions');
	};


	//
	// Event Listeners
	//

	let editStatusDialog = document.querySelector('#edit-status-dialog');
	let statusWarningDialog = document.querySelector('#status-warning-dialog');

	editStatusDialog.addEventListener('click', (event) => {
		let target = event.target as HTMLButtonElement;
		let dialog = editStatusDialog as HTMLDialogElement;

		if (target.matches('button.change-status')) {
			try {
				let assessment = getActiveAssessmentData();

				let { status } = assessment;
				let newStatus = status === 'In Progress' ? 'Complete' : 'In Progress';

				setAssessment({
					status: newStatus,
					dateModified: Date.now(),
					changeLog: updateChangeLog({
						message: `updated assessment status to ${newStatus.toLowerCase()}.`,
					}),
				});

				// Close the dialog
				dialog.close();

				toastControl.show({ target, type: 'success' });
			} catch (error) {
				console.error(error);
				toastControl.show({ target, type: 'failure' });
			}
		}
	});

	statusWarningDialog.addEventListener('click', (event) => {
		let target = event.target as HTMLButtonElement;

		if (target.matches('button.change-status')) {
			try {
				setAssessment({
					status: 'In Progress',
					dateModified: Date.now(),
					changeLog: updateChangeLog({
						message: `updated assessment status to in progress.`,
					}),
				});

				toastControl.show({ target, type: 'success' });

				setState({
					mode: 'assessment',
				});

				dialogControl.open({
					dialogId: 'assessor-dialog',
					headingText: 'Select Active Assessor',
					context: 'setup',
				});

			} catch (error) {
				console.error(error);
				toastControl.show({ target, type: 'failure' });
			}
		}
	});


	//
	// Inits
	//

	subscribe(updateEditStatusDialog);
</script>
