---
import { getCollection } from "astro:content";

import SearchDialog from "./dialogs/SearchDialog.astro";
import MediaDialog from "./dialogs/MediaDialog.astro";
import MobileNavDialog from "./dialogs/MobileNavDialog.astro";

import IconSearch from "./icons/IconSearch_24.astro";
import IconLight from "./icons/IconLight_24.astro";
import IconDark from "./icons/IconDark_24.astro";
import IconInfo20 from "./icons/IconInfo_20.astro";
import IconEdit20 from "./icons/IconEdit_20.astro";
import IconSearch20 from "./icons/IconSearch_20.astro";
import IconHistory20 from "./icons/IconHistory_20.astro";
import IconMegaphone from "./icons/IconMegaphone_24.astro";
import IconMenu from "./icons/IconMenu_20.astro";
import IconHome from "./icons/IconHome_24.astro";
import IconCaretDown14 from "./icons/IconCaretDown_14.astro";
import IconArrowRight16 from "./icons/IconArrowRight_16.astro";
import IconXmark from "src/components/icons/IconXmark_20.astro";
import IconVideo from "src/components/icons/IconVideo_48.astro";

import { Image } from "astro:assets";
import welcomeVideoPoster from "src/images/welcome-video-poster.png";

const { url } = Astro;
let path = url.pathname;

let allIndicators = await getCollection("indicators");
let indicators = allIndicators.sort((a, b) => a.data.tag.localeCompare(b.data.tag));

---

<header data-theme="red" data-background="dark">

	<div class="wrapper">

		<div class="site-announcement-container" role="region" aria-label="Site announcement" data-theme="red" hidden>
			<IconMegaphone/>
			<span>New resources are added regularly. <a href="/resources">Explore what's new.</a></span>
		</div>
		<div class="site-masthead">
			<nav class="global" aria-label="Main navigation">
				<ul class="nav-links-list">
					<li class="home-name">
						<a href="/" data-font-type="serif" aria-label="Home" data-style-as="button">
							NB Middle School Conditions for Success
						</a>
					</li>
					<li class="home-icon">
						<a href="/" aria-label="Home" data-style-as="button" >
							<span class="icon-and-label-container">
								<IconHome />
								<span class="label-container" hidden>
									<span class="label">Home</span>
								</span>
							</span>
						</a>
					</li>
					<li class="subnav-container">
						<button class="subnav-toggle" type="button" aria-expanded="false">
							<span class="icon-and-label-container">
								<span class="label-container">
									<span class="label">The Big Seven</span>
								</span>
								<IconCaretDown14/>
							</span>
						</button>
						<ul class="subnav-links-list">
							<li>
								<a class="subnav-link"
									aria-current={path === "/big-seven" ? "page" : null}
									href="/big-seven">
									Introduction
								</a>
							</li>
							{indicators.map((indicator)=> {
								let indicatorPath = `/big-seven/${indicator.id}`;
								return (
									<li>
										<a class="subnav-link"
											aria-current={path === indicatorPath
												? "page"
												: null}
											href={indicatorPath}
											>
											{indicator.data.title}								
										</a>
									</li>
								)
							})}
						</ul>
					</li>
					<li><a class="nav-link" data-style-as="button" aria-current={path.includes('/resources') ? 'page' : null} href="/resources">Resources</a></li>
					<li><a class="nav-link" data-style-as="button" aria-current={path.includes('/report') ? 'page' : null} href="/report">Report</a></li>
				</ul>
			</nav>
			<MobileNavDialog/>
			<div class="global-controls">
				<button
					class="search open-dialog"
					data-dialog="search-dialog"
					type="button"
					aria-label="Open Search Dialog"
				>
					<span class="icon-and-label-container">
						<IconSearch20 />
						<span class="label-container">
							<span class="label">Search</span>
						</span>
					</span>
				</button>
				<button class="theme" type="button" aria-label="Toggle Theme">
					<span class="icon-and-label-container">
						<IconLight />
						<IconDark hidden={true}/>
						<span class="label-container" hidden>
							<span class="label">Change Theme</span>
						</span>
					</span>
				</button>
				<button class="menu open-dialog" data-dialog="mobile-nav-dialog" type="button" aria-label="Open Menu">
					<span class="icon-and-label-container">
						<IconMenu />
						<span class="label-container">
							<span class="label">Menu</span>
						</span>
					</span>
				</button>
			</div>
		</div>
		<div class="background" aria-hidden="true"></div>


		<!-- 
		---- Homepage Only
		-->

		{path === '/' && (
			<div class="site-title-container">
				<h1 id="main-heading" class="site-title" tabindex="-1">New Brunswick Middle Schools: A Window of Opportunity</h1>
				<p class="site-subtitle" data-font-type="serif">Conditions for Success Developmental Continuums</p>
			</div>
			<div class="media-container">
				<button class="media open-dialog" data-dialog="media-dialog" data-dialog-heading="Welcome to the Conditions for Success Website!" data-media-type="video" data-media-src="https://middle.nbed.ca/conditions-for-success/assets/media/welcome.mp4" data-media-external="false" type="button">
					<Image
						src={welcomeVideoPoster}
						alt="A snapshot of the website welcome video."
					/>
					<span class="icon-container">
						<IconVideo/>
					</span>
				</button>
			</div>
			<MediaDialog/>
			<div class="launchpad callout" data-style="solid" data-intensity="bold">
				<div class="wrapper">
					<h2>I want to...</h2>
					<ul class="shortcuts-list favourite">
						<li>
							<a href="/big-seven" data-style-as="button" data-style="solid" data-size="large">
								<span class="icon-and-label-container">
									<IconInfo20/>
									<span class="label-container">
										<span class="label">Learn about the continuums</span>
									</span>
								</span>
							</a>
						</li>
						<li>
							<a href="/big-seven?dialog=create-assessment" data-style-as="button" data-style="solid" data-size="large">
								<span class="icon-and-label-container">
									<IconEdit20/>
									<span class="label-container">
										<span class="label" data-field="assessmentShortcut">Start an assessment</span>
									</span>
								</span>
							</a>
						</li>
						<li>
							<a href="/resources" data-style-as="button" data-style="solid" data-size="large">
								<span class="icon-and-label-container">
									<IconSearch20/>
									<span class="label-container">
										<span class="label">Find a resource</span>
									</span>
								</span>
							</a>
						</li>
					</ul>
					<h2 hidden>Last time, I was working on...</h2>
					<ul class="shortcuts-list recent" hidden>
						<template>
							<li>
								<a href="" data-style-as="button" data-style="solid" data-size="large">
									<span class="icon-and-label-container">
										<IconHistory20/>
										<span class="label-container">
											<span class="label"></span>
										</span>
									</span>
								</a>
							</li>
						</template>
					</ul>
				</div>
			</div>
		)}

	</div>

</header>

<SearchDialog />

<style is:global>

	header {
		container: header / inline-size;
	}
	
	header > .wrapper {
		display: grid;
		grid-template-columns: 1fr 1fr;
		grid-template-rows: auto auto auto auto auto;
		grid-template-areas: 
		"announcement announcement"
		"masthead masthead"
		"title title"
		"media launchpad"
		"media launchpad";
		align-items: center;
		justify-items: center;
		column-gap: var(--space-2xl);
	}

	@container header (width < 1440px) {
		header >.wrapper {
			grid-template-areas: 
			"announcement announcement"
			"masthead masthead"
			"title title"
			"media media"
			"launchpad launchpad"
			"launchpad launchpad";
		}
	}

	/* 
	// Background Pattern
	*/
	
	header .background {
		grid-column: 1 / span 2;
		grid-row: 1 / span 4;
		width: 100%;
		height: 100%;
		background: 
			url('/patterns/pattern.svg') repeat,
			var(--colour-fill-neutral-bold);
		background-blend-mode: screen;
		z-index: -1;
	}

	@container header (width < 1440px) {
		header .background {
			grid-row: 1 / span 5;
		}
	}

	/* 
	// Site Announcement
	*/

	header .site-announcement-container {
		--icon-size: 1.25rem;
		--icon-colour: var(--colour-ui-reverse);
		grid-area: announcement;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: var(--space-xs);
		place-self: start;
		margin: 0 var(--space-2xl);
		padding: var(--space-2xs) var(--space-base) var(--space-2xs) var(--space-sm);
		background-color: var(--colour-fill-accent-bold);
		border-radius: 0 0 var(--border-radius-normal) var(--border-radius-normal);
		min-height: 3rem;
		color: var(--colour-ui-reverse);
		font-size: var(--font-size-2xs);
		font-weight: 500;
	}

	header .site-announcement-container a {
		color: inherit;
		font-size: inherit;
		font-weight: inherit;
	}

	header .site-announcement-container a:is(:hover, :focus-visible) {
		color: inherit;
	}

	/* 
	// Site Masthead
	*/

	header .site-masthead {
		grid-area: masthead;
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: var(--space-2xs);
		min-height: 7rem;
		width: calc(100% - ((2*var(--space-2xl)) - (2*(var(--space-sm)))));
		max-width: calc(1920px - (2*var(--space-2xl)));
	}

	@container header (width < 1088px) {
		header .site-masthead {
			min-height: 6rem;
		}
	}

	@container header (width < 640px) {
		header .site-masthead {
			min-height: 5rem;
		}
	}

	/* 
	// Navigation
	*/

	header nav.global {
		flex-grow: 1;
	}

	header nav.global ul {
		margin: 0;
		padding: 0;
		list-style-type: none;
	}

	header nav.global .nav-links-list {
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: var(--space-xs);
		position: relative;
	}

	header nav.global .subnav-links-list {
		display: none;
		flex-flow: column nowrap;
		align-items: start;
		gap: var(--space-base);
		background-color: var(--colour-fill-accent-bold);
		border-radius: var(--border-radius-normal);
		padding: var(--space-sm) var(--space-sm) var(--space-base);
		box-shadow: var(--box-shadow);
		position: absolute;
		top: calc(3rem + var(--space-xs));
		z-index: 1000;
	}

	header nav.global button.subnav-toggle[aria-expanded="true"] + .subnav-links-list {
		display: flex;
	}

	/* Text Links and Buttons */

	header :is(nav.global, .global-controls) :is(a, button) {
		--button-background-colour: transparent;
		--button-border-radius: var(--border-radius-normal);
		--button-ui-colour: var(--colour-ui-reverse);
		--icon-size: 1.5rem;
		--icon-colour: var(--colour-ui-reverse);
		--label-size: var(--font-size-sm);
		--label-colour: var(--colour-ui-reverse);
		--link-colour: var(--colour-ui-reverse);

		display: flex;
		align-items: center;
		min-height: 3rem;
		padding: var(--space-2xs) var(--space-sm);
		
		font-size: var(--font-size-sm);
	}

	header :is(nav.global, .global-controls) :is(a, button):is(:hover, :focus-visible) {
		--button-background-colour: var(--colour-fill-neutral-subtle);
		--icon-colour: var(--colour-ui-neutral);
		--label-colour: var(--colour-ui-neutral);
		--button-ui-colour: var(--colour-ui-neutral);
	}
	
	header nav.global .nav-link[aria-current="page"],
	header nav.global .nav-link[aria-current="page"]:is(:hover, :focus-visible) {
		--button-boxshadow-colour: var(--colour-border-neutral-subtle);
		--button-background-colour: transparent;
		--button-ui-colour: var(--colour-ui-reverse);
	}

	header nav.global button.subnav-toggle[aria-expanded="true"] {
		--icon-colour: var(--colour-ui-reverse);
		--label-colour: var(--colour-ui-reverse);
		background-color: var(--colour-fill-accent-bold);
		box-shadow: var(--box-shadow);
	}

	header nav.global button.subnav-toggle .icon.caret {
		--icon-size: 0.875rem;
		transition: rotate var(--transition-ease-medium);
		transform-origin: center;
	}

	header nav.global button.subnav-toggle[aria-expanded="true"] .icon.caret {
		rotate: x 180deg;
	}

	header nav.global .subnav-link {
		--link-colour: var(--colour-ui-reverse);
		font-size: var(--font-size-xs);
		font-weight: 300;
		line-height: 1.2; 
		padding: 0;
		min-height: 0;
	}

	@container header (width < 640px) {
		header nav.global li:not(.home-icon) {
			display: none;
		}
	}

	/* Home Name Link */

	header nav.global .home-name {
		flex-grow: 1;
	}
	
	header nav.global .home-name a {
		display: inline-flex;
		width: auto;
		min-height: 3rem;
		padding: var(--space-2xs) var(--space-sm);
		border-radius: var(--border-radius-normal);
		font-size: var(--font-size-base);
		text-decoration: none;
		color: var(--colour-ui-reverse);
	}

	header nav.global .home-name a:is(:hover, :focus-visible) {
		background-color: transparent;
		color: var(--colour-ui-reverse);
	}
	
	/* Home Icon Link */
	
	header nav.global .home-icon {
		display: none;
		flex-grow: 0;
	}

	header nav.global .home-icon a {
		padding: var(--space-2xs) var(--space-xs);
	}

	@container header (width < 1088px) {
		header nav.global .home-icon {
			display: block;
		}
		header nav.global .home-name {
			display: none;
		}
	}


	/* 
	// Site Controls
	*/

	header .global-controls {
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: var(--space-2xs);
	}

	header .global-controls button {
		padding: var(--space-2xs) var(--space-sm);
		min-width: 3rem;
	}
	
	header .global-controls button.search {
		--icon-size: 1.25rem;
	}

	header .global-controls button.theme {
		padding: var(--space-2xs) var(--space-xs);
	}

	header .global-controls button.menu {
		--icon-size: 1.25rem;
		display: none;
	}

	@container header (width < 640px) {
		header .global-controls button.menu {
			display: inline;
		}
	}

	@container header (width < 1088px) {
		header .global-controls button.search .label-container {
			display: none;
		}
		header .global-controls button.search {
			padding: var(--space-2xs) var(--space-xs);
		}
	}

	/* 
	// Homepage: Site Title/Subtitle
	*/

	header .site-title-container {
		grid-area: title;
		display: flex;
		flex-flow: column;
		justify-items: center;
		align-items: center;
		max-width: 720px;
		margin: var(--space-2xl) 0 var(--space-4xl);
	}

	header .site-title-container .site-title {
		color: var(--colour-ui-reverse);
		text-align: center;
		text-wrap: balance;
	}

	header .site-title-container .site-subtitle {
		display: inline-block;
		font-size: var(--font-size-xl);
		font-weight: 500;
		line-height: 1;
		color: var(--colour-ui-reverse);
		text-align: center;
		background-color: var(--colour-fill-accent-bold);
		border-radius: var(--border-radius-normal);
		padding: var(--space-sm) var(--space-lg);
	}

	@container header (width < 1088px) {
		header .site-title-container {
			max-width: min(704px, calc(100% - (2*var(--space-2xl))));
		}
		header .site-title-container .site-title {
			margin: 0 0 var(--space-lg);
		}
		header .site-title-container .site-subtitle {
			padding: 0.875rem 1.125rem;
		}
	}
	
	/* 
	// Homepage: Welcome Media
	*/
	
	header .media-container {
		grid-area: media;
		justify-self: end;
		height: 506px;
		margin: 0;
		margin-left: var(--space-2xl);
		aspect-ratio: 3 / 2;
		flex-shrink: 0;
		flex-grow: 1;
		background-color: var(--colour-fill-neutral-subtle);
		border-radius: var(--border-radius-normal);
	}

	@container header (width < 1440px) {
		header .media-container {
			justify-self: center;
			min-height: 280px;
			width: min(900px, calc(100% - (2*var(--space-2xl))));
			margin: 0 0 var(--space-2xl);
			aspect-ratio: 16 / 9;
		}
	}

	/* 
	// Homepage: Launchpad
	*/

	header .launchpad {
		grid-area: launchpad;
		justify-self: start;
		width: 100%;
		margin: 0;
	}
	
	header .launchpad > .wrapper {
		margin-right: var(--space-2xl);
	}

	header .launchpad h2 {
		font-size: var(--font-size-xl);
		font-weight: 500;
		line-height: 1;
		color: var(--colour-ui-reverse);
	}

	header .launchpad ul {
		list-style-type: none;
		padding: 0;
		display: flex;
		flex-flow: row wrap;
		align-items: center;
		gap: var(--space-sm);
	}

	@container header (width < 1440px) {
		header .launchpad {
			justify-self: center;
			width: min(900px, calc(100% - (2*var(--space-2xl))));
			margin: 0;
		}
		header .launchpad > .wrapper {
			margin: 0 auto;
		}
	}


</style>

<script>

	//
	// Imports
	//

	import { subscribe, checkAnnouncementSession } from "src/stores/userDataStore";
	import { eventControl } from "src/utilities/event";

	// 
	// Methods
	//

	let createLaunchpadLink = ({list, title, path}) => {

		let template = list.querySelector('template');
		if (!template) return;

		// Clone the template
		let item = template.content.cloneNode(true) as HTMLElement;

		// Update the label
		item.querySelector(".label").textContent = title.trim();
		item.querySelector('a').href = path;

		return item;

	}

	//
	// DOM Updates
	//

	let updateLaunchpad = (data: UserData, changes) => {
		let launchpad = document.querySelector('.launchpad');
		if (!launchpad) return;

		let triggerKeys = [
			"mode",
			"lastVisitedPage",
			"lastModifiedPage",
		];
		if (
			!changes.initiating &&
			!(
				changes.uiState &&
				triggerKeys.some((val) => changes.uiState.includes(val))
			)
		)
			return;

		console.log('Updating Launchpad', changes);

		let { mode, lastVisitedPage, lastModifiedPage } = data.uiState;
		
		// Update the assessment button
		let assessmentShortcutField = launchpad.querySelector('.shortcuts-list.favourite [data-field="assessmentShortcut"]');

		if (assessmentShortcutField) {

			let assessmentShortcutLink = assessmentShortcutField.closest('a');

			if (mode === 'assessment' && lastModifiedPage) {
				assessmentShortcutField.textContent = 'Continue assessment';
				assessmentShortcutLink.href = lastModifiedPage?.path ?? '/big-seven/leadership-and-teaming';
			} else {
				assessmentShortcutField.textContent = 'Start an assessment';
				assessmentShortcutLink.href = '/big-seven';
			}

		}

		// Update the recent page button

		let recentShortcutsList = launchpad.querySelector('.shortcuts-list.recent');
		let recentShortcutsHeading = recentShortcutsList.previousElementSibling;

		if (lastVisitedPage && lastVisitedPage.path !== '/') {

			let link = createLaunchpadLink({
				list: recentShortcutsList,
				title: lastVisitedPage.title,
				path: lastVisitedPage.path,
			});

			let recentShortcuts = recentShortcutsList.querySelectorAll(':scope > li');
			for (let shortcut of recentShortcuts) {
				shortcut.remove();
			}
			recentShortcutsList.append(link);
			recentShortcutsList.removeAttribute('hidden');
			recentShortcutsHeading.removeAttribute('hidden');

		} else {
			recentShortcutsList.setAttribute('hidden', '');
			recentShortcutsHeading.setAttribute('hidden', '');
		}

	}

	// 
	// Inits
	//

	if (window.location.pathname === '/') subscribe(updateLaunchpad);


	let onPageLoad = (event) => {
		let path = window.location.pathname;

		if (path.includes('/big-seven')) {

			let showAnnouncement = checkAnnouncementSession();
			let announcementContainer = document.querySelector('.site-announcement-container');
			announcementContainer.toggleAttribute('hidden', !showAnnouncement);

		}

	}
	eventControl.add({
		elem: document,
		eventType: "astro:page-load",
		fn: onPageLoad,
	})

	let onClick = (event) => {
		let target = event.target as any;

		if (target.matches('button.subnav-toggle')) {
			let expanded = target.getAttribute('aria-expanded') === 'true';
			target.setAttribute('aria-expanded', String(!expanded));
		}

	}
	eventControl.add({
		selector: 'header .site-masthead',
		eventType: "click",
		fn: onClick,
	})

	let onFocusout = (event) => {
		let target = event.target as any;
		let next = event.relatedTarget as any;

		if (target.matches('button.subnav-toggle, .subnav-link')) {
			let subnavContainer = target.closest('.subnav-container');			
			if (subnavContainer && subnavContainer.contains(next)) return;
			let btn = subnavContainer.querySelector('button.subnav-toggle');
			btn.setAttribute('aria-expanded', 'false');
		}

	}
	eventControl.add({
		selector: 'header .site-masthead',
		eventType: "focusout",
		fn: onFocusout,
	})

</script>