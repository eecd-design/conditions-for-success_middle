---

import IconSearch from "./icons/IconSearch_24.astro";
import IconLight from "./icons/IconLight_24.astro";
import IconDark from "./icons/IconDark_24.astro";
import SearchDialog from "./dialogs/SearchDialog.astro";
import IconInfo20 from "./icons/IconInfo_20.astro";
import IconEdit20 from "./icons/IconEdit_20.astro";
import IconSearch20 from "./icons/IconSearch_20.astro";
import IconHistory20 from "./icons/IconHistory_20.astro";
import MediaDialog from "./dialogs/MediaDialog.astro";

const { url } = Astro;
let path = url.pathname;

---

<header data-theme="red">

	<div class="site-masthead">
		<nav class="global">
			<ul class="nav-links-list">
				<li class="home"><a href="/" data-font-type="serif">NB Middle School Conditions for Success</a></li>
				<li><a class={path.includes('/big-seven') ? 'active' : ''} href="/big-seven">The Big Seven</a></li>
				<li><a class={path.includes('/resources') ? 'active' : ''} href="/resources">Resources</a></li>
				<li><a class={path.includes('/report') ? 'active' : ''} href="/report">Report</a></li>
			</ul>
		</nav>
		<div class="global-controls">
			<button
				class="open-dialog"
				data-dialog="search-dialog"
				type="button"
				aria-label="Open Search Dialog"
			>
				<div class="icon-and-label-container">
					<IconSearch />
					<span class="label-container">
						<span class="label">Search</span>
					</span>
				</div>
			</button>
				<button class="theme-toggle" type="button" aria-label="Toggle Theme">
				<div class="icon-and-label-container">
					<IconLight />
					<IconDark hidden={true}/>
					<span class="label-container" hidden>
						<span class="label">Change Theme</span>
					</span>
				</div>
			</button>
		</div>
	</div>

	<div class="background" aria-hidden="true"></div>

	{path === '/' && (

		<div class="site-title-container">
			<h1 class="site-title">New Brunswick Middle Schools: A Window of Opportunity</h1>
			<p class="site-subtitle" data-font-type="serif">Conditions for Success Developmental Continuums</p>
		</div>

		<div class="launchpad">

			<div class="media-container">
				<button class="open-dialog" data-dialog="media-dialog" data-media-type="video" data-media-src="https://pedex.nbed.nb.ca/DesignTeam/middle/conditions-for-success/assets/media/building-student-profiles-with-a-data-wall.mp4" data-media-external="false" type="button">
					Internal Video
				</button>
				<button class="open-dialog" data-dialog="media-dialog" data-media-type="video" data-media-src="https://www.youtube.com/watch?v=hmtuvNfytjM" data-media-external="true" type="button">
					External Video
				</button>
				<button class="open-dialog" data-dialog="media-dialog" data-media-type="audio" data-media-src="https://pedex.nbed.nb.ca/DesignTeam/middle/conditions-for-success/assets/media/building-student-profiles-with-a-data-wall.mp4" type="button">
					Audio
				</button>
			</div>

			<MediaDialog/>

			<div class="quick-links-container callout" data-style="solid" data-intensity="bold">

				<h2>I want to...</h2>
				<ul class="shortcuts-list favourite">
					<li>
						<a href="/big-seven" data-style-as="button" data-style="solid" data-size="large">
							<div class="icon-and-label-container">
								<IconInfo20/>
								<span class="label-container">
									<span class="label">Learn about the continuums</span>
									{/* TODO: Change link text if onboarding is complete? As in, they've clicked this link before? */}
								</span>
							</div>
						</a>
					</li>
					<li>
						<a href="/big-seven?dialog=create-assessment" data-style-as="button" data-style="solid" data-size="large">
							<div class="icon-and-label-container">
								<IconEdit20/>
								<span class="label-container">
									<span class="label" data-field="assessmentShortcut">Start an assessment</span>
								</span>
							</div>
						</a>
					</li>
					<li>
						<a href="/resources" data-style-as="button" data-style="solid" data-size="large">
							<div class="icon-and-label-container">
								<IconSearch20/>
								<span class="label-container">
									<span class="label">Find a resource</span>
								</span>
							</div>
						</a>
					</li>
				</ul>

				<h2>Last time, I was working on...</h2>
				<ul class="shortcuts-list recent">
				</ul>

			</div>

		</div>

	)}

</header>

<SearchDialog />

<style is:global>

	header {
		display: grid;
		grid-template-rows: auto auto auto auto;
		grid-template-areas: 
		"masthead"
		"title"
		"launchpad"
		"launchpad";
		align-items: center;
		justify-items: center;
	}
	
	header .background {
		grid-column: 1;
		grid-row: 1 / span 3;
		width: 100%;
		height: 100%;
		background: 
			url('/patterns/pattern.svg') repeat,
			var(--colour-fill-neutral-bold);
		background-blend-mode: screen;
		z-index: -1;
	}

	header .site-masthead {
		grid-area: masthead;
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: 0.5rem;
		height: 7rem;
		padding: 0 3rem;
		width: 100%;
	}

	header nav.global {
		flex-grow: 1;
	}

	header nav.global .nav-links-list {
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: 0.5rem;
		margin: 0;
		padding: 0;
		list-style-type: none;
	}

	header nav.global .home {
		flex-grow: 1;
		text-decoration: none;
		color: var(--colour-ui-reverse);
	}

	header nav.global .home a {
		text-decoration: none;
		color: var(--colour-ui-reverse);
	}

	header nav.global .nav-links-list :not(.home) a,
	header .global-controls button {
		display: flex;
		align-items: center;
		height: 3rem;
		padding: 0 1rem;
		border-radius: var(--border-radius-normal);
		text-decoration: none;
		font-size: 1.125rem;
		color: var(--colour-ui-reverse);
	}

	header nav.global .nav-links-list :not(.home) a:is(:hover, :focus-visible),
	header .global-controls button:is(:hover, :focus-visible) {
		background-color: var(--colour-fill-neutral-subtle);
		color: var(--colour-ui-neutral);
	}
	
	header nav.global .nav-links-list :not(.home) a.active,
	header nav.global .nav-links-list :not(.home) a.active:is(:hover, :focus-visible) {
		background-color: transparent;
		outline: 2px solid var(--colour-border-neutral-subtle);
		outline-offset: -1px;
		color: var(--colour-ui-reverse);
	}

	header .global-controls {
		--button-background-colour: transparent;
		--icon-colour: var(--colour-ui-reverse);
		--icon-size: 1.5rem;
		--label-colour: var(--colour-ui-reverse);
		--label-size: 1.125rem;
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: 0.5rem;
	}

	header .global-controls button:is(:hover, :focus-visible) {
		--icon-colour: var(--colour-ui-neutral);
		--label-colour: var(--colour-ui-neutral);
	}

	header .global-controls .theme-toggle {
		padding: 0 0.75rem;
	}

	header .site-title-container {
		grid-area: title;
		display: flex;
		flex-flow: column;
		justify-items: center;
		align-items: center;
		max-width: 680px;
		margin: 2rem 0 5rem;
	}

	header .site-title-container .site-title {
		color: var(--colour-ui-reverse);
		text-align: center;
	}

	header .site-title-container .site-subtitle {
		display: inline-block;
		font-size: 1.75rem;
		font-weight: 500;
		line-height: 1;
		color: var(--colour-ui-reverse);
		text-align: center;
		background-color: var(--colour-fill-accent-bold);
		border-radius: var(--border-radius-normal);
		padding: 1rem 1.5rem;
	}

	header .launchpad {
		grid-area: launchpad;
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: 3rem;
		margin: 0 7rem;
	}

	header .launchpad .media-container {
		min-height: 400px;
		aspect-ratio: 3 / 2;
		flex-shrink: 0;
		flex-grow: 1;
		background-color: var(--colour-fill-neutral-subtle);
		border-radius: var(--border-radius-normal);
	}

	header .launchpad .quick-links-container {
		--callout-margin: 0;
		flex-shrink: 1;
	}

	header .launchpad .quick-links-container h2 {
		font-size: 1.75rem;
		font-weight: 500;
		line-height: 1;
		color: var(--colour-ui-reverse);
	}

	header .launchpad .quick-links-container ul {
		list-style-type: none;
		padding: 0;
		display: flex;
		flex-flow: row wrap;
		align-items: center;
		gap: 1rem;
	}


</style>

<script>

	//
	// Imports
	//

	import { subscribe } from "src/stores/userDataStore";
	import { htmlToElement } from "src/utilities/helpers";

	// 
	// Methods
	//

	let createLaunchpadLink = ({title, path}) => {

		let template = `
			<li>
				<a href="${path}" data-style-as="button" data-style="solid" data-size="large">
					<div class="icon-and-label-container">
						<svg class="icon history" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
							<path d="M20 10c0 4.96-4.04 9-9 9-3.77 0-7.17-2.38-8.46-5.92a.998.998 0 0 1 .6-1.28.998.998 0 0 1 1.28.6c1 2.75 3.65 4.61 6.58 4.61 3.86 0 7-3.14 7-7s-3.14-7-7-7c-2.97 0-5.59 1.9-6.57 4.66l1.06-.39a.998.998 0 0 1 1.28.6.998.998 0 0 1-.6 1.28l-3.32 1.21a.998.998 0 0 1-1.28-.6L.36 6.44a.998.998 0 0 1 .6-1.28.998.998 0 0 1 1.28.6l.37 1.01A8.996 8.996 0 0 1 11 1c4.96 0 9 4.04 9 9Zm-9-5c-.55 0-1 .45-1 1v4c0 .27.11.52.29.71l2 2c.2.2.45.29.71.29s.51-.1.71-.29a.996.996 0 0 0 0-1.41L12 9.59V6c0-.55-.45-1-1-1Z"/>
						</svg>
						<span class="label-container">
							<span class="label">${title}</span>
						</span>
					</div>
				</a>
			</li>
		`

		let elem = htmlToElement(template);

		return elem;

	}

	// TODO: Convert this to template elem

	//
	// DOM Updates
	//

	let updateLaunchpad = (data: UserData, changes) => {
		let launchpad = document.querySelector('.launchpad');
		if (!launchpad) return;

		let triggerKeys = [
			"mode",
			"lastVisitedPage",
			"lastModifiedPage",
		];
		if (
			!changes.initiating &&
			!(
				changes.uiState &&
				triggerKeys.some((val) => changes.uiState.includes(val))
			)
		)
			return;

		console.log('Updating Launchpad');

		let { mode, lastVisitedPage, lastModifiedPage } = data.uiState;
		
		// Update the assessment button
		let assessmentShortcutField = launchpad.querySelector('.quick-links-container [data-field="assessmentShortcut"]');

		if (assessmentShortcutField) {

			let assessmentShortcutLink = assessmentShortcutField.closest('a');

			if (mode === 'assessment' && lastModifiedPage) {
				assessmentShortcutField.textContent = 'Continue assessment';
				assessmentShortcutLink.href = lastModifiedPage?.path ?? '/big-seven/leadership-and-teaming';
			} else {
				assessmentShortcutField.textContent = 'Start an assessment';
				assessmentShortcutLink.href = '/big-seven';
			}

		}

		// Update the recent page button

		let recentShortcutsList = launchpad.querySelector('.shortcuts-list.recent');

		if (lastVisitedPage && lastVisitedPage.path !== '/') {

			let link = createLaunchpadLink({
				title: lastVisitedPage.title,
				path: lastVisitedPage.path,
			});

			recentShortcutsList.innerHTML = '';
			recentShortcutsList.append(link);

		}


	}

	// 
	// Inits
	//

	if (window.location.pathname === '/') subscribe(updateLaunchpad);

</script>