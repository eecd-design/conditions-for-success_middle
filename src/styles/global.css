/*
** UNIVERSAL BOX-SIZING
------------------------------*/

*,
*::before,
*::after {
	box-sizing: border-box;
}




/*
** SYSTEM VARIABLES
------------------------------*/

:root {

	/*
    // BASE COLOURS
    */

	/* red */
	--red-muted-50: #faf1f1;
	--red-muted-75: #eee1e1;
	--red-muted-100: #e3cdcd;
	--red-muted-200: #e0a9ab;
	--red-muted-300: #c18486;
	--red-muted-400: #a35056;
	--red-muted-500: #8b3b42;
	--red-muted-600: #79242f;
	--red-muted-700: #79242f;
	--red-muted-800: #79242f;
	--red-vivid-75: #fedcdc;
	--red-vivid-100: #fcbdbf;
	--red-vivid-400: #c54d5a;

	/* orange */
	--orange-muted-50: #faf2ee;
	--orange-muted-75: #eee2dc;
	--orange-muted-100: #e2cec5;
	--orange-muted-200: #d9ad99;
	--orange-muted-300: #bd8971;
	--orange-muted-400: #9f5531;
	--orange-muted-500: #88401b;
	--orange-muted-600: #742d00;
	--orange-muted-700: #732d00;
	--orange-muted-800: #732d00;
	--orange-vivid-75: #fcded1;
	--orange-vivid-100: #ffc0a3;
	--orange-vivid-400: #bd5a25;

	/* yellow */
	--yellow-muted-50: #f6f3ec;
	--yellow-muted-75: #e9e4da;
	--yellow-muted-100: #dad2c1;
	--yellow-muted-200: #c8b48b;
	--yellow-muted-300: #aa9260;
	--yellow-muted-400: #84630c;
	--yellow-muted-500: #6c5005;
	--yellow-muted-600: #574005;
	--yellow-muted-700: #574005;
	--yellow-muted-800: #574005;
	--yellow-vivid-75: #f8e3b7;
	--yellow-vivid-100: #eccc8a;
	--yellow-vivid-400: #a07803;

	/* green */
	--green-muted-50: #f0f5ef;
	--green-muted-75: #e1e7dd;
	--green-muted-100: #cad3c2;
	--green-muted-200: #a4bc95;
	--green-muted-300: #809a73;
	--green-muted-400: #4a7332;
	--green-muted-500: #385d29;
	--green-muted-600: #254b14;
	--green-muted-700: #254b14;
	--green-muted-800: #254b14;
	--green-vivid-75: #d7edd0;
	--green-vivid-100: #b6dea7;
	--green-vivid-400: #4d8238;

	/* teal */
	--teal-muted-50: #ecf5f8;
	--teal-muted-75: #dbe7ea;
	--teal-muted-100: #c2d5da;
	--teal-muted-200: #91bdc9;
	--teal-muted-300: #629ba9;
	--teal-muted-400: #087286;
	--teal-muted-500: #0c5e6d;
	--teal-muted-600: #034956;
	--teal-muted-700: #034956;
	--teal-muted-800: #034956;
	--teal-vivid-75: #c8edf6;
	--teal-vivid-100: #9fdceb;
	--teal-vivid-400: #128196;

	/* blue */
	--blue-muted-50: #f0f4fa;
	--blue-muted-75: #e2e4ed;
	--blue-muted-100: #d0d2e0;
	--blue-muted-200: #aeb5d0;
	--blue-muted-300: #8692bc;
	--blue-muted-400: #4668a6;
	--blue-muted-500: #36538d;
	--blue-muted-600: #264272;
	--blue-muted-700: #264272;
	--blue-muted-800: #264272;
	--blue-vivid-75: #d9e6fd;
	--blue-vivid-100: #b6d1fe;
	--blue-vivid-400: #4875c2;

	/* purple */
	--purple-muted-50: #f4f2fa;
	--purple-muted-75: #e4e3ec;
	--purple-muted-100: #d3d1df;
	--purple-muted-200: #b5b2c7;
	--purple-muted-300: #988eb7;
	--purple-muted-400: #6d638c;
	--purple-muted-500: #594d7b;
	--purple-muted-600: #473c68;
	--purple-muted-700: #473c68;
	--purple-muted-800: #473c68;
	--purple-vivid-75: #e6e1fd;
	--purple-vivid-100: #d2c7fd;
	--purple-vivid-400: #7e6ab8;

	/* gray */
	--gray-muted-50: #eff4fa;
	--gray-muted-75: #e0e5ec;
	--gray-muted-100: #ced3d9;
	--gray-muted-200: #b0b7c0;
	--gray-muted-300: #8e949d;
	--gray-muted-400: #636b76;
	--gray-muted-500: #4c5663;
	--gray-muted-600: #3b4450;
	--gray-muted-700: #2f3a49;
	--gray-muted-800: #162130;
	--gray-vivid-75: #dce6f5;
	--gray-vivid-100: #c3d1e6;
	--gray-vivid-400: #667890;


	/*
    // THEME COLOURS
    */

	--colour-background: white;

	--colour-ui-neutral: var(--gray-muted-800);
	--colour-ui-neutral-subtle: var(--gray-muted-500);
	--colour-ui-reverse: white;
	--colour-ui-reverse-subtle: var(--gray-muted-100);
	--colour-ui-link: var(--colour-ui-neutral);
	--colour-ui-link-hover: var(--colour-ui-neutral);
	--colour-ui-link-underline: var(--colour-ui-neutral-subtle);
	--colour-ui-error: var(--red-vivid-400);

	--colour-highlight-fill: var(--red-muted-100);
	--colour-highlight-ui: var(--red-muted-800);

	--colour-fill-neutral-faint: var(--gray-muted-50);
	--colour-fill-neutral-subtle: var(--gray-muted-75);
	--colour-fill-neutral-subtle-highlight: var(--gray-muted-100);
	--colour-fill-neutral-mid: var(--gray-muted-500);
	--colour-fill-neutral-bold: var(--gray-muted-700);

	--colour-border-neutral-subtle: var(--gray-muted-200);
	--colour-border-neutral-mid: var(--gray-muted-300);
	--colour-border-neutral-bold: var(--gray-muted-500);

	--border-radius-small: 0.25rem;
	--border-radius-normal: 0.5rem;

	--transition-linear-fast: 75ms linear;
	--transition-linear-medium: 150ms linear;
	--transition-ease-fast: 100ms ease;
	--transition-ease-medium: 200ms ease;
	--transition-ease-slow: 300ms ease;

}

[data-theme="red"] {
	--colour-ui-accent: var(--red-muted-500);
	--colour-ui-accent-subtle: var(--red-muted-400);
	--colour-ui-accent-bold: var(--red-muted-600);

	--colour-highlight: #fbf9c9;
	--colour-fill-highlight: var(--color-highlight);
	--colour-on-highlight: inherit;

	--colour-fill-accent-subtle: var(--red-muted-75);
	--colour-fill-accent-subtle-highlight: var(--red-muted-100);
	--colour-fill-accent-bold: var(--red-muted-500);

	--colour-border-accent-subtle: var(--red-muted-200);
	--colour-border-accent-mid: var(--red-muted-300);
	--colour-border-accent-bold: var(--red-muted-500);
}

[data-theme="red"][data-vibrancy="vivid"] {
	--colour-fill-accent-subtle: var(--red-vivid-75);
	--colour-fill-accent-subtle-highlight: var(--red-vivid-100);
	--colour-fill-accent-bold: var(--red-vivid-400);

	--colour-border-accent-subtle: var(--red-vivid-100);
	--colour-border-accent-bold: var(--red-vivid-400);
}

[data-theme="orange"] {
	--colour-ui-accent: var(--orange-muted-500);
	--colour-ui-accent-subtle: var(--orange-muted-400);
	--colour-ui-accent-bold: var(--orange-muted-600);

	--colour-highlight: #fbf9c9;
	--colour-fill-highlight: var(--color-highlight);
	--colour-on-highlight: inherit;

	--colour-fill-accent-subtle: var(--orange-muted-75);
	--colour-fill-accent-subtle-highlight: var(--orange-muted-100);
	--colour-fill-accent-bold: var(--orange-muted-500);

	--colour-border-accent-subtle: var(--orange-muted-200);
	--colour-border-accent-mid: var(--orange-muted-300);
	--colour-border-accent-bold: var(--orange-muted-500);
}

[data-theme="orange"][data-vibrancy="vivid"] {
	--colour-fill-accent-subtle: var(--orange-vivid-75);
	--colour-fill-accent-subtle-highlight: var(--orange-vivid-100);
	--colour-fill-accent-bold: var(--orange-vivid-400);

	--colour-border-accent-subtle: var(--orange-vivid-100);
	--colour-border-accent-bold: var(--orange-vivid-400);
}

[data-theme="yellow"] {
	--colour-ui-accent: var(--yellow-muted-500);
	--colour-ui-accent-subtle: var(--yellow-muted-400);
	--colour-ui-accent-bold: var(--yellow-muted-600);

	--colour-highlight: #fbf9c9;
	--colour-fill-highlight: var(--color-highlight);
	--colour-on-highlight: inherit;

	--colour-fill-accent-subtle: var(--yellow-muted-75);
	--colour-fill-accent-subtle-highlight: var(--yellow-muted-100);
	--colour-fill-accent-bold: var(--yellow-muted-500);

	--colour-border-accent-subtle: var(--yellow-muted-200);
	--colour-border-accent-mid: var(--yellow-muted-300);
	--colour-border-accent-bold: var(--yellow-muted-500);
}

[data-theme="yellow"][data-vibrancy="vivid"] {
	--colour-fill-accent-subtle: var(--yellow-vivid-75);
	--colour-fill-accent-subtle-highlight: var(--yellow-vivid-100);
	--colour-fill-accent-bold: var(--yellow-vivid-400);

	--colour-border-accent-subtle: var(--yellow-vivid-100);
	--colour-border-accent-bold: var(--yellow-vivid-400);
}

[data-theme="green"] {
	--colour-ui-accent: var(--green-muted-500);
	--colour-ui-accent-subtle: var(--green-muted-400);
	--colour-ui-accent-bold: var(--green-muted-600);

	--colour-highlight: #fbf9c9;
	--colour-fill-highlight: var(--color-highlight);
	--colour-on-highlight: inherit;

	--colour-fill-accent-subtle: var(--green-muted-75);
	--colour-fill-accent-subtle-highlight: var(--green-muted-100);
	--colour-fill-accent-bold: var(--green-muted-500);

	--colour-border-accent-subtle: var(--green-muted-200);
	--colour-border-accent-mid: var(--green-muted-300);
	--colour-border-accent-bold: var(--green-muted-500);
}

[data-theme="green"][data-vibrancy="vivid"] {
	--colour-fill-accent-subtle: var(--green-vivid-75);
	--colour-fill-accent-subtle-highlight: var(--green-vivid-100);
	--colour-fill-accent-bold: var(--green-vivid-400);

	--colour-border-accent-subtle: var(--green-vivid-100);
	--colour-border-accent-bold: var(--green-vivid-400);
}

[data-theme="teal"] {
	--colour-ui-accent: var(--teal-muted-500);
	--colour-ui-accent-subtle: var(--teal-muted-400);
	--colour-ui-accent-bold: var(--teal-muted-600);

	--colour-highlight: #fbf9c9;
	--colour-fill-highlight: var(--color-highlight);
	--colour-on-highlight: inherit;

	--colour-fill-accent-subtle: var(--teal-muted-75);
	--colour-fill-accent-subtle-highlight: var(--teal-muted-100);
	--colour-fill-accent-bold: var(--teal-muted-500);

	--colour-border-accent-subtle: var(--teal-muted-200);
	--colour-border-accent-mid: var(--teal-muted-300);
	--colour-border-accent-bold: var(--teal-muted-500);
}

[data-theme="teal"][data-vibrancy="vivid"] {
	--colour-fill-accent-subtle: var(--teal-vivid-75);
	--colour-fill-accent-subtle-highlight: var(--teal-vivid-100);
	--colour-fill-accent-bold: var(--teal-vivid-400);

	--colour-border-accent-subtle: var(--teal-vivid-100);
	--colour-border-accent-bold: var(--teal-vivid-400);
}

[data-theme="blue"] {
	--colour-ui-accent: var(--blue-muted-500);
	--colour-ui-accent-subtle: var(--blue-muted-400);
	--colour-ui-accent-bold: var(--blue-muted-600);

	--colour-highlight: #fbf9c9;
	--colour-fill-highlight: var(--color-highlight);
	--colour-on-highlight: inherit;

	--colour-fill-accent-subtle: var(--blue-muted-75);
	--colour-fill-accent-subtle-highlight: var(--blue-muted-100);
	--colour-fill-accent-bold: var(--blue-muted-500);

	--colour-border-accent-subtle: var(--blue-muted-200);
	--colour-border-accent-mid: var(--blue-muted-300);
	--colour-border-accent-bold: var(--blue-muted-500);
}

[data-theme="blue"][data-vibrancy="vivid"] {
	--colour-fill-accent-subtle: var(--blue-vivid-75);
	--colour-fill-accent-subtle-highlight: var(--blue-vivid-100);
	--colour-fill-accent-bold: var(--blue-vivid-400);

	--colour-border-accent-subtle: var(--blue-vivid-100);
	--colour-border-accent-bold: var(--blue-vivid-400);
}

[data-theme="purple"] {
	--colour-ui-accent: var(--purple-muted-500);
	--colour-ui-accent-subtle: var(--purple-muted-400);
	--colour-ui-accent-bold: var(--purple-muted-600);

	--colour-highlight: #fbf9c9;
	--colour-fill-highlight: var(--color-highlight);
	--colour-on-highlight: inherit;

	--colour-fill-accent-subtle: var(--purple-muted-75);
	--colour-fill-accent-subtle-highlight: var(--purple-muted-100);
	--colour-fill-accent-bold: var(--purple-muted-500);

	--colour-border-accent-subtle: var(--purple-muted-200);
	--colour-border-accent-mid: var(--purple-muted-300);
	--colour-border-accent-bold: var(--purple-muted-500);
}

[data-theme="purple"][data-vibrancy="vivid"] {
	--colour-fill-accent-subtle: var(--purple-vivid-75);
	--colour-fill-accent-subtle-highlight: var(--purple-vivid-100);
	--colour-fill-accent-bold: var(--purple-vivid-400);

	--colour-border-accent-subtle: var(--purple-vivid-100);
	--colour-border-accent-bold: var(--purple-vivid-400);
}




/*
** THEMES
------------------------------*/

/*
// LIGHT THEME (DEFAULT / FORCED)
*/

:root:not([data-theme="dark"]),
:root[data-theme="light"] {

	color-scheme: light only;

}


/*
// DARK THEME (AUTO)
*/

/* @media (prefers-color-scheme: dark) {

    :root:not([data-theme="light"]){

        color-scheme: dark only;

	}

} */


/*
// DARK THEME (FORCED)
*/

:root[data-theme="dark"] {

	color-scheme: dark only;

}




/*
** TYPOGRAPHY
------------------------------*/

html {
	font-family: "Public Sans", sans-serif;
	font-size: 16px;
	font-weight: 400;
	color: var(--colour-ui-neutral);
}

[data-font-type="serif"] {
	font-family: aesthet-nova, serif;
}

[data-font-type="sans-serif"] {
	font-family: "Public Sans", sans-serif;
}

h1 {
	font-family: aesthet-nova, serif;
	font-size: 3rem;
	font-weight: 700;
	line-height: 1;
	margin: 0 0 2rem;
}

h2,
[data-style-as="h2"] {
	font-family: aesthet-nova, serif;
	font-size: 2rem;
	font-weight: 700;
	line-height: 1.2;
	margin: 1.5rem 0 1.5rem;
}

:is(h2, [data-style-as="h2"]):has(+ .heading-subtitle) {
	margin: 1.5rem 0 0.5rem;
}

:is(h2, [data-style-as="h2"])+.heading-subtitle {
	--icon-colour: var(--colour-ui-accent);
	--icon-size: 1.25rem;
	display: flex;
	flex-flow: row nowrap;
	align-items: start;
	gap: 0.75rem;
	font-family: aesthet-nova, serif;
	font-size: 1.625rem;
	font-weight: 500;
	line-height: 1.2;
	color: var(--colour-ui-accent);
	margin: 0 0 1.5rem;
}

:is(h2, [data-style-as="h2"])+.heading-subtitle>.icon {
	margin-top: 0.25rem;
}

h3,
[data-style-as="h3"] {
	font-family: "Public Sans", sans-serif;
	font-size: 1.5rem;
	font-weight: 700;
	line-height: 1.2;
	margin: 1rem 0 1.5rem;
}

h4 {
	font-size: 1.25rem;
	font-weight: 700;
	line-height: 1.2;
}

p {
	margin: 0 0 1rem;
}

:where(p, li, a) {
	font-size: 1.25rem;
	font-weight: 500;
	line-height: 1.6;
}

:is(ul, ol)> :first-child {
	margin-top: 0 !important;
}

:is(ul, ol)> :last-child {
	margin-bottom: 0 !important;
}


@container body (max-width: 963px) {}


@container body (max-width: 529px) {}




/*
** BUTTONS
------------------------------*/

:is(button, a) * {
	pointer-events: none;
}

.button-group {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	gap: var(--group-gap, 1rem);
	height: 100%;
}

.button-group>* {
	flex-grow: 0;
	margin: 0 !important;
}

.button-group[data-fit="compact"] {
	--group-gap: 0.5rem;
}

:is(button:not([data-style-as="link"]), [data-style-as="button"]) {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	user-select: none;
	font-size: 1rem;
	font-weight: 600;
	line-height: 1;
	color: var(--button-ui-colour, var(--colour-ui-neutral));
	height: 2.25rem;
	padding: 0 0.5rem;
	background-color: var(--button-background-colour, var(--colour-fill-neutral-subtle));
	border-radius: var(--button-border-radius, var(--border-radius-small));
	border: none;
	outline: var(--button-outline-width, 2px) solid var(--button-outline-colour, transparent);
	outline-offset: -1px;
	text-decoration: none;
	user-select: none;
	-webkit-tap-highlight-color: transparent;
	/* Removes blue highlight on mobile */
	transition:
		background-color var(--transition-linear-fast),
		color var(--transition-linear-fast),
		outline-color var(--transition-linear-fast),
		border-color var(--transition-linear-fast);
}

:is(button:not([data-style-as="link"]), [data-style-as="button"]):is(:hover, :focus-visible) {
	--button-background-colour: var(--colour-fill-neutral-mid);
	--button-ui-colour: var(--colour-ui-reverse);
	--button-outline-colour: transparent;
}

:is(button:not([data-style-as="link"]), [data-style-as="button"]):disabled {
	opacity: 0.3;
	pointer-events: none;
}

:is(button:not([data-style-as="link"]), [data-style-as="button"]):is([aria-pressed="true"], :has(input:checked)) {
	--button-background-colour: var(--colour-fill-neutral-mid);
	--button-ui-colour: var(--colour-ui-reverse);
	--button-outline-colour: transparent;
}


:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-size="small"] {
	height: 1.5rem;
	padding: 0 0.5rem;
	font-size: 0.875rem;
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-size="large"] {
	--button-border-radius: var(--border-radius-normal);
	height: 3rem;
	width: fit-content;
	min-width: 8rem;
	max-width: 100%;
	padding: 0 1.5rem;
	font-size: 1rem;
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-size="large"]:has(.icon) {
	padding: 0 1rem;
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-style="solid"] {
	--button-background-colour: var(--colour-fill-neutral-mid);
	--button-ui-colour: var(--colour-ui-reverse);
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-style="solid"]:is(:hover, :focus-visible) {
	--button-background-colour: transparent;
	--button-ui-colour: var(--colour-ui-neutral);
	--button-outline-colour: var(--colour-border-neutral-bold);
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-style="outline"] {
	--button-background-colour: transparent;
	--button-ui-colour: var(--colour-ui-neutral-subtle);
	--button-outline-colour: var(--colour-border-neutral-subtle);
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-style="outline"]:is(:hover, :focus-visible) {
	--button-background-colour: transparent;
	--button-ui-colour: var(--colour-ui-neutral);
	--button-outline-colour: var(--colour-border-neutral-bold);
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-style="solid-outline"] {
	--button-background-colour: var(--colour-fill-accent-subtle, var(--colour-fill-neutral-subtle));
	;
	--button-outline-colour: var(--colour-border-accent-bold, var(--colour-border-neutral-bold));
	--button-outline-width: 1px;
	--label-colour: var(--colour-ui-accent, var(--colour-ui-neutral));
	--icon-colour: var(--colour-ui-accent, var(--colour-ui-neutral));
}

:is(button:not([data-style-as="link"]), [data-style-as="button"])[data-style="solid-outline"]:is(:hover, :focus-visible) {
	--button-background-colour: var(--colour-fill-accent-bold, var(--colour-fill-neutral-bold));
}


/* TODO: Check target size minimum for WCAG 2.2 to ensure small buttons are large enough */



/*
** LINKS
------------------------------*/

:is(a, [data-style-as="link"]) {
	color: var(--colour-ui-link);
	font-weight: 600;
	text-decoration-color: var(--colour-ui-link-underline);
	text-align: unset;
	/* Normalize buttons */
	cursor: pointer;
	-webkit-tap-highlight-color: transparent;
	/* Removes blue highlight on mobile */
	transition:
		background-color var(--transition-linear-fast),
		text-decoration-color var(--transition-linear-fast),
		color var(--transition-linear-fast);
}

:is(a, [data-style-as="link"]):hover {
	color: var(--colour-ui-link-hover);
	text-decoration-color: transparent;
}

:is(a, [data-style-as="link"]):has(.icon.destination, .icon.type) {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	line-height: 1.2;
}

:is(a, [data-style-as="link"]) .icon.destination {
	--icon-colour: var(--colour-ui-neutral-subtle);
	--icon-size: 1rem;
}

:is(a, [data-style-as="link"]) .icon.type {
	--icon-colour: var(--colour-ui-neutral-subtle);
	--icon-size: 1.5rem;
}

:is(a, [data-style-as="link"]) .text-container {
	flex-grow: 1;
}

:is(a, [data-style-as="link"]) .text-container:has(.label) {
	display: flex;
	flex-flow: column nowrap;
	gap: 0.375rem;
}

:is(a, [data-style-as="link"]) .text-container .label {
	color: var(--label-colour, var(--colour-ui-neutral-subtle));
	font-size: var(--label-size, 1rem);
	font-weight: var(--label-weight, 500);
}


/* WITH DESTINATION ICON (external, download, expand) */

:is(a, [data-style-as="link"]) .icon.destination:not(.arrow) {
	opacity: 0;
	scale: 90%;
	transition: opacity var(--transition-linear-fast), scale var(--transition-ease-fast);
	/* TODO: Media check for hover, and if not, have icon appear always */
}

:is(a, [data-style-as="link"]):is(:hover, :focus-visible) .icon.destination:not(.arrow) {
	opacity: 1;
	scale: 100%;
	transition: opacity var(--transition-linear-medium) 0.1s, scale var(--transition-ease-medium) 0.1s;
}



/* WITH ARROW ICON (AFTER TEXT) */

:is(a, [data-style-as="link"]) .icon.destination.arrow {
	opacity: 0;
	translate: -0.25rem;
	transition: opacity var(--transition-linear-fast), translate var(--transition-ease-fast);
}

:is(a, [data-style-as="link"]):is(:hover, :focus-visible) .icon.destination.arrow {
	opacity: 1;
	translate: 0;
	transition: opacity var(--transition-linear-medium) 0.1s, translate var(--transition-ease-medium) 0.1s;
}

/* WITH ARROW ICON (BEFORE TEXT) */

:is(a, [data-style-as="link"]):has(.icon.destination.arrow) .icon-container:first-child {
	width: 0;
	flex-shrink: 0;
	transition: width var(--transition-ease-slow);
}

:is(a, [data-style-as="link"]):has(.icon.destination.arrow):is(:hover, :focus-visible) .icon-container:first-child {
	width: 1.75rem;
}

:is(a, [data-style-as="link"]):has(.icon-container:first-child) .icon.destionation.arrow {
	translate: -0.75rem;
}

:is(a, [data-style-as="link"]):has(.icon-container:first-child):has(.icon.destination.arrow) .text-container {
	padding-right: 1.75rem;
	transition: padding var(--transition-ease-slow);
}

:is(a, [data-style-as="link"]):has(.icon-container:first-child):has(.icon.destination.arrow):is(:hover, :focus-visible) .text-container {
	padding-right: 0;
}


/* SECTION LINK LIST */

.list-container {
	margin: 1.5rem 0;
}

.links-list {
	display: flex;
	flex-flow: column;
	gap: 1rem;
	margin: 1.5rem 0;
	padding: 0;
	list-style-type: none;
}



/*
** HTML & BODY
------------------------------*/

html {
	height: 100%;
	scroll-behavior: smooth;
	background-color: var(--colour-background);
}

@media (prefers-reduced-motion) {
	html {
		scroll-behavior: auto;
	}
}

body {
	container: body / inline-size;

	display: grid;
	grid-template-rows: auto 1fr auto;
	background-color: var(--theme-bkgColour-subtlePrimary);
	background-image: var(--theme-pattern);
	width: 100%;
	height: 100%;
	color: var(--colour-ui-neutral);
}

@media (prefers-contrast: more) {
	body {
		background-image: none;
	}
}




/*
** MAIN
------------------------------*/

main {
	display: grid;
	grid-template-columns: 1fr minmax(600px, 900px) 1fr;
	grid-template-rows: 1fr;
	grid-template-areas:
		"left-aside content right-aside";
}

main:has(.assessment-controls) {
	grid-template-rows: auto 1fr;
	grid-template-areas:
		"toolbar toolbar toolbar"
		"left-aside content right-aside";
}

.assessment-controls {
	grid-area: toolbar;
}

.section-nav-container {
	grid-area: left-aside;
	margin: 0 5rem 0 0;
	padding: 2rem;
	border-right: 1px solid var(--colour-border-neutral-subtle);
}

.on-page-nav-container {
	grid-area: right-aside;
	padding: 3rem;
}

nav.on-page {
	position: sticky;
	top: 3rem;
}

.content {
	grid-area: content;
	padding: 5rem 0;
}





/*
** RESTRICTIONS
------------------------------*/

main:not([data-mode="assessment"]) [data-restrict-mode="assessment"] {
	display: none !important;
}

main:not([data-mode="reading"]) [data-restrict-mode="reading"] {
	display: none !important;
}

main:not([data-status="complete"]) [data-restrict-status="complete"] {
	display: none !important;
}

main:not([data-status="in-progress"]) [data-restrict-status="in-progress"] {
	display: none !important;
}

main:not([data-assessor="true"]) [data-restrict-assessor="true"] {
	display: none !important;
}

main:not([data-assessor="false"]) [data-restrict-assessor="false"] {
	display: none !important;
}

main:not([data-report="active"]) [data-restrict-report="active"] {
	display: none !important;
}

main:not([data-report="inactive"]) [data-restrict-report="inactive"] {
	display: none !important;
}

.links-list:not([data-layout="detailed"]) [data-restrict-layout="detailed"] {
	display: none !important;
}

.links-list:not([data-content="resources"]) [data-restrict-content="resources"] {
	display: none !important;
}

.links-list:not([data-content="mixed"]) [data-restrict-content="mixed"] {
	display: none !important;
}


/*
** SECTIONS
------------------------------*/

:is(article, section, aside, nav, div, figure, dialog, form, fieldset)> :first-child {
	margin-top: 0 !important;
}

:is(article, section, aside, nav, div, figure, dialog, form, fieldset)> :last-child {
	margin-bottom: 0 !important;
}



/*
** NAVIGATION
------------------------------*/


nav.on-page .heading {
	font-size: 1.5rem;
	border-bottom: 1px solid var(--colour-border-neutral-subtle);
	padding: 0 0 0.5rem;
	margin: 0 0 1rem;
}

nav.on-page li {
	line-height: 1.2;
}

nav.on-page a {
	font-size: 1rem;
}

nav a {
	user-select: none;
}

[data-mode="assessment"] nav.on-page {
	top: calc(3.75rem + 3rem);
}


/*
** HEADINGS (SPECIAL)
------------------------------*/

:is(h2, [data-style-as="h2"]):has(.tag) {
	display: flex;
	flex-flow: row nowrap;
	gap: 1rem;
	align-items: start;
}

:is(h2, [data-style-as="h2"]) .tag {
	display: flex;
	align-items: center;
	height: 1.75rem;
	padding: 0 0.5rem;
	margin: 0.25rem 0;
	background-color: var(--colour-fill-accent-subtle);
	border-radius: var(--border-radius-small);
	font-size: 1.25rem;
	line-height: 1;
	color: var(--colour-ui-accent);
}

:is(h3, [data-style-as="h3"]):has(> .icon) {
	--icon-colour: var(--colour-ui-accent);
	--icon-size: 1.5rem;
	display: flex;
	flex-flow: row nowrap;
	gap: 0.5rem;
	align-items: center;
	position: relative;
}

/* :is(h3, [data-style-as="h3"]):has(> .icon)::after {
	content: "";
	height: 2px;
	background-color: var(--colour-border-neutral-subtle);
	position: absolute;
	top: calc(0.75rem - 1px);
	left: 7rem;
	right: 0;
} */


/*
** FORMS
------------------------------*/

form {
	display: flex;
	flex-flow: column;
	gap: 1.25rem;
}

form[data-fit="compact"] {
	gap: 0.5rem;
}

form fieldset {
	margin: 0;
	padding: 0;
	border: none;
}

form :is(label, [data-style-as="label"], legend, [data-style-as="legend"]) {
	display: block;
	font-size: 1.25rem;
	font-weight: 600;
	margin: 0 0 0.5rem;
}

form :is(legend, [data-style-as="legend"])[data-style="small"] {
	font-size: 1rem;
}

form label[data-style-as="button"] {
	display: inline-flex;
}

form [data-style-as="button"] input:is([type="radio"], [type="checkbox"]) {
	appearance: none;
	width: 0;
	height: 0;
	opacity: 0;
}

/* RADIO INPUTS */

form .radio-group {
	display: flex;
	flex-flow: row;
	align-items: center;
	gap: 0.5rem;
	margin: 0.5rem 0;
}

/* Refine radio styles, not sure about the very bold always outline, kind of wish I could use gray-muted-400 */

form .radio-container {
	display: inline-grid;
	grid-auto-flow: column;
	align-items: center;
	height: 2.5rem;
	padding: 0;
	outline: 2px solid var(--container-outline-colour, transparent);
	outline-offset: -1px;
	border-radius: var(--border-radius-normal);
	background-color: var(--container-background-colour, transparent);
	position: relative;
}

form .radio-container[data-theme]:has(input:checked) {
	outline: 2px solid var(--container-outline-colour, var(--colour-border-accent-bold));
	background-color: var(--container-background-colour, var(--colour-fill-accent-subtle));
}

form .radio-container:has(input:checked) {
	outline-color: var(--container-outline-colour, var(--colour-border-neutral-bold));
}

/* Selects the none checked input for hover state */
form .radio-container:not(:has(input:checked)):is(:hover, :focus-visible) {
	background-color: var(--colour-fill-accent-subtle, var(--colour-fill-neutral-subtle));
}

form .radio-container label {
	display: inline-flex;
	align-items: center;
	font-size: 1rem;
	font-weight: 400;
	line-height: 1;
	height: 100%;
	margin: 0;
	padding: 0 0.75rem 0 0;
	cursor: pointer;
}

form .radio-container input[type="radio"] {
	appearance: none;
	height: 2.5rem;
	width: 2.25rem;
	opacity: 0;
	z-index: 0;
	cursor: pointer;
}

form .radio-container::before {
	content: "";
	position: absolute;
	left: 0.625rem;
	height: 1rem;
	width: 1rem;
	background-color: var(--colour-background);
	border: 2px solid var(--colour-border-neutral-bold);
	border-radius: 100rem;
	pointer-events: none;
	z-index: 1;
	transition: border-color var(--transition-linear-fast);
}

form .radio-container:is(:hover, :focus-visible, :has(input:checked))::before {
	border-color: var(--colour-border-accent-bold, var(--colour-border-neutral-bold));
}

form .radio-container:has(input:checked)::after {
	content: "";
	position: absolute;
	left: 0.875rem;
	height: 0.5rem;
	width: 0.5rem;
	background-color: var(--colour-fill-accent-bold, var(--colour-fill-neutral-mid));
	border-radius: 100rem;
	pointer-events: none;
	z-index: 2;
}

/* CHECKBOX INPUTS */

form label:has(input[type="checkbox"]) {
	display: flex;
	flex-flow: row nowrap;
	align-items: start;
	gap: 0.75rem;
	margin: 0;
	padding: 0;
	font-size: 0.875rem;
	font-weight: 400;
	cursor: pointer;
	user-select: none;
	position: relative;
	transition: all var(--transition-linear-fast);
}

form label:has(input[type="checkbox"]) input {
	height: 1rem;
	width: 1rem;
	opacity: 0;
	cursor: pointer;
	z-index: 0;
	flex-shrink: 0;
}

form label:has(input[type="checkbox"]):is(:hover, :focus-visible, :checked)::before {
	border-color: var(--colour-border-neutral-bold);
}

form label:has(input[type="checkbox"])::before {
	content: "";
	position: absolute;
	height: 1rem;
	width: 1rem;
	background-color: var(--colour-background);
	border: 2px solid var(--colour-border-neutral-mid);
	border-radius: var(--border-radius-small);
	pointer-events: none;
	z-index: 1;
	transition: border-color var(--transition-linear-fast);
}

form label:has(input[type="checkbox"]) .icon.checkmark {
	--icon-colour: var(--colour-ui-neutral);
	--icon-size: 0.5rem;
	position: absolute;
	top: 0.25rem;
	left: 0.25rem;
	z-index: 2;
	opacity: 0;
	transition: opacity var(--transition-linear-fast);
}

form label:has(input[type="checkbox"]:checked) .icon.checkmark {
	opacity: 1;
}

form label:has(input[type="checkbox"]) .text-container {
	flex-grow: 1;
	display: flex;
	flex-flow: row nowrap;
	align-items: start;
	gap: 0.5rem;
}

form label:has(input[type="checkbox"]) .text-container .tag {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-shrink: 0;
	padding: 0 0.25rem;
	height: 1.125rem;
	min-width: 1.125rem;
	border-radius: var(--border-radius-small);
	background-color: var(--colour-fill-accent-subtle);
	font-size: 0.75rem;
	font-weight: 600;
	color: var(--colour-ui-accent);
	line-height: 1;
	transition: all var(--transition-linear-fast);
}

form label:has(input[type="checkbox"]):is(:hover, :focus-visible) .text-container .tag {
	background-color: var(--colour-fill-neutral-mid);
	color: var(--colour-ui-reverse);
}



/* TEXT AND SELECT INPUTS */

.input-container,
.select-container,
[data-style-as="input-container"] {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	position: relative;
	border-radius: var(--border-radius-normal);
	border: 2px solid var(--colour-border-neutral-subtle);
	width: 100%;
	height: 3rem;
	padding: 0;
	margin: 0;
}

:is(.input-container,
	.select-container,
	[data-style-as="input-container"]):has(:is(input, select)[aria-invalid="true"]) {
	border-color: var(--colour-ui-error);
}

input[type="text"],
select,
[data-style-as="input"] {
	display: flex;
	align-items: center;
	appearance: none;
	border: none;
	background: none;
	height: 100%;
	min-width: 0;
	/* Fixed text-overflow inside flex item */
	padding: 0 1rem;
	margin: 0;
	flex-grow: 1;
	font-size: 1rem;
	line-height: 1.2;
}

input[type="text"]::placeholder {
	color: var(--colour-ui-neutral-subtle);
}

.code-container {
	color: var(--colour-ui-neutral-subtle);
}

.code-container .url span {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.select-container .icon {
	width: 0.875rem;
	position: absolute;
	right: 1rem;
}

:is(.input-container, .code-container) button {
	--icon-size: 1rem;
	margin-right: 0.25rem;
}

:is(.input-container, .code-container) button:is(:hover, :focus-visible) {
	--icon-colour: var(--colour-ui-reverse);
	--label-colour: var(--colour-ui-reverse);
}

.input-container>.icon {
	--icon-size: 1.25rem;
	margin-right: 1rem;
}

form> :is(.button-group, button):last-of-type {
	margin: 0.5rem 0 0;
}


/* FILE INPUTS */

label.file-input-container {
	position: relative;
}

label.file-input-container input[type="file"] {
	position: absolute;
	width: 0;
	height: 0;
	padding: 0;
	overflow: hidden !important;
	clip: rect(0, 0, 0, 0);
	border: 0;
}


/* CUSTOM VALUE LIST */

ul.field-values-list {
	display: flex;
	flex-flow: row wrap;
	column-gap: 0.5rem;
	row-gap: 0.75rem;
	list-style-type: none;
	padding: 0;
	margin: 1rem 0;
}

ul.field-values-list li {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	gap: 0.5rem;
	font-size: 0.875rem;
	line-height: 1.2;
	height: 2rem;
	border-radius: var(--border-radius-normal);
	background-color: var(--colour-fill-neutral-subtle);
	padding: 0 0 0 0.75rem;
	transition: background-color var(--transition-linear-fast);
}

ul.field-values-list li:has(button.clear:is(:hover, :focus-visible)) {
	background-color: var(--colour-fill-neutral-subtle-highlight);
}

ul.field-values-list li .group {
	padding-right: 0.5rem;
	border-right: 1px solid var(--colour-border-neutral-subtle);
	font-weight: 700;
}

ul.field-values-list li .title {
	font-weight: 500;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	max-width: 8rem;
}

ul.field-values-list li button.clear {
	--button-background-colour: var(--colour-fill-neutral-subtle);
	--icon-size: 0.75rem;
	--icon-colour: var(--colour-ui-neutral-subtle);
	display: inline-flex;
	height: 2rem;
	min-width: 2rem;
	border-radius: 0 var(--border-radius-normal) var(--border-radius-normal) 0;
	border-left: 1px solid var(--colour-border-neutral-subtle);
}

ul.field-values-list li button.clear:is(:hover, :focus-visible) {
	--button-background-colour: var(--colour-fill-neutral-bold);
	--icon-colour: var(--colour-ui-reverse);
	border-color: var(--button-background-colour);
}


/* STATUS */

.error-status {
	--icon-size: 1rem;
	--icon-colour: var(--colour-ui-error);
	display: flex;
	flex-flow: row nowrap;
	align-items: start;
	gap: 0.5rem;
	margin: 0.5rem 0 0;
	font-size: 0.875rem;
	line-height: 1.2;
	color: var(--colour-ui-error);
}


/*
** DIALOGS
------------------------------*/

dialog {
	background-color: var(--colour-background);
	border-radius: var(--border-radius-normal);
	border: none;
	padding: 3rem;
	width: min(100%, 636px);
	max-height: calc(100% - 4rem);
	max-width: calc(100% - 2rem);
	z-index: 1000;
}

dialog.media {
	width: min(100%, 960px);
}

dialog:focus {
	outline: none;
	caret-color: transparent;
}

dialog::backdrop {
	background-color: var(--colour-fill-neutral-bold);
	opacity: 0.8;
	z-index: 999;
}

dialog button.close-dialog:has(.icon:only-child) {
	--button-background-colour: transparent;
	--icon-size: 1.25rem;
	float: right;
	margin: 0 0 1rem 1.5rem;
}

dialog button.close-dialog:has(.icon:only-child):is(:hover, :focus-visible) {
	--button-background-colour: var(--colour-fill-neutral-subtle);
}

dialog section {
	margin: 1.5rem 0;
}

dialog>.heading {
	margin: 0 0 1.5rem;
	padding: 0 0 1rem;
	border-bottom: 2px solid var(--colour-border-neutral-subtle);
}

dialog section>h3 {
	font-size: 1.375rem;
	font-weight: 600;
	margin: 1rem 0;
}

dialog .instructions {
	font-size: 1rem;
	line-height: 1.4;
	margin: 0 0 0.75rem;
	color: var(--colour-ui-neutral-subtle);
}

dialog .callout {
	--callout-margin: 1.5rem 0;
}

dialog section:has(.elem-group:empty) {
	display: none;
}

dialog .button-group {
	margin: 1.5rem 0;
}

dialog hr.group {
	margin: 2rem 0;
}

dialog form hr.group {
	margin: 0.75rem 0;
}



/*
** GROUPS
------------------------------*/

.elem-group {
	container: elem-group / inline-size;
	display: grid;
	grid-template-columns: repeat(var(--group-columns), 1fr);
	gap: var(--group-gap, 1.5rem);
	list-style-type: none;
	padding: 0;
	margin: var(--group-margin, 4rem 0);
}

.elem-group[data-columns="2"] {
	--group-columns: 2;
}

.elem-group[data-columns="3"] {
	--group-columns: 3;
}

.elem-group>* {
	margin: 0 !important;
}

.elem-group[data-columns="2"]:has(> *:not(template):only-child)>* {
	grid-column: span 2;
}

.elem-group[data-columns="3"]:has(> *:not(template):only-child)>* {
	grid-column: span 3;
}

.elem-group[data-columns="2"]:has(> *:not(template):nth-last-child(n + 3))>* {
	grid-column: span 2;
}

.elem-group[data-columns="3"]:has(> *:not(template):nth-last-child(n + 4))>* {
	grid-column: span 3;
}

.elem-group [data-fit="compact"] {
	--group-gap: 1rem;
	--group-margin: 1rem 0;
}



/*
** CALLOUT BOXES
------------------------------*/

.callout {
	background-color: var(--callout-background-colour, var(--colour-fill-neutral-subtle));
	border-radius: var(--border-radius-normal);
	padding: var(--callout-padding, 2rem);
	margin: var(--callout-margin, 2.5rem 0);
	width: fit-content;
}

.callout[data-spacing="large"] {
	--callout-margin: 4rem 0;
}

.callout[data-fit="compact"] {
	--callout-padding: 1.25rem;
}

.callout[data-fit="compact"][data-style="solid"]:has(.icon-container) {
	column-gap: 1.25rem;
}

.callout[data-fit="compact"] :where(p, li, a) {
	font-size: 1rem;
	line-height: 1.4;
}

.callout[data-style="solid"] {
	--callout-background-colour: var(--colour-fill-accent-subtle, var(--colour-fill-neutral-subtle));
}

.callout[data-style="solid"][data-intensity="bold"] {
	--callout-background-colour: var(--colour-fill-accent-bold, var(--colour-fill-neutral-bold));
	--callout-ui-colour: var(--colour-ui-reverse);
}

.callout[data-style="solid"]:has(.icon-container) {
	--icon-size: 1.5rem;
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	column-gap: 1.5rem;
}

.callout[data-style="outline"] {
	--callout-background-colour: transparent;
	display: flex;
	flex-flow: column nowrap;
	align-items: center;
	padding: 2rem 3rem;
	border: 2px solid var(--colour-border-neutral-subtle);
	position: relative;
}

.callout .heading {
	font-size: var(--callout-heading-size, 1.625rem);
	font-weight: 700;
	color: var(--callout-ui-colour, inherit);
}

.callout .heading:has(.icon) {
	--icon-colour: var(--colour-ui-accent);
	--icon-size: 1.5rem;
	display: flex;
	align-items: center;
	gap: 0.75rem;
}

.callout[data-style="solid"][data-intensity="bold"] :is(button:not([data-style-as="link"]), [data-style-as="button"]) {
	--icon-size: 1.25rem;
	--container-gap: 0.75rem;
	--label-size: 1rem;
	--button-background-colour: var(--colour-background);
}

.callout[data-style="solid"][data-intensity="bold"] :is(button:not([data-style-as="link"]), [data-style-as="button"]):is(:hover, :focus-visible) {
	--button-background-colour: transparent;
	--button-outline-colour: var(--colour-background);
	--label-colour: var(--colour-ui-reverse);
	--icon-colour: var(--colour-ui-reverse);
}

.callout[data-style="outline"][data-elem-on-path="heading"] .heading {
	position: absolute;
	top: -0.5rem;
	left: 1.5rem;
	padding: 0 1.5rem;
	background-color: var(--colour-background);
	font-size: 1rem;
	text-transform: uppercase;
	line-height: 1;
	color: var(--colour-ui-accent);
}

.callout[data-style="outline"][data-elem-on-path="icon"] .icon-container {
	--icon-size: 2.5rem;
	--icon-colour: var(--colour-ui-accent-subtle);
	position: absolute;
	top: -1.25rem;
	padding: 0 1.5rem;
	background-color: var(--colour-background);
}

.callout[data-style="image"] {
	--callout-background-colour: var(--colour-fill-accent-bold, var(--colour-fill-neutral-bold));
	display: grid;
	grid-template-columns: auto;
	grid-template-rows: 1fr auto;
	padding: 0;
}

.callout[data-style="image"] img {
	grid-column: 1 / 2;
	grid-row: 1 / 3;
	width: 100%;
	max-height: 400px;
	opacity: 0.5;
	position: relative;
	object-fit: cover;
	z-index: 1;
}

.callout[data-style="image"] .text-container {
	grid-column: 1 / 2;
	grid-row: 2 / 3;
	z-index: 2;
	padding: 2rem;
	position: relative;
	z-index: 2;
}

.callout[data-style="image"] .text-container::after {
	content: "";
	display: block;
	background: var(--colour-fill-accent-bold, var(--colour-fill-neutral-bold));
	border-radius: var(--border-radius-normal);
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: linear-gradient(to top,
			var(--colour-fill-accent-bold) 0%,
			transparent);
	z-index: 3;
}

.callout[data-style="image"] .text-container p {
	font-size: 1.25rem;
	font-weight: 700;
	line-height: 1.2;
	color: var(--colour-ui-reverse);
	position: relative;
	z-index: 4;
}



/*
** CARDS
------------------------------*/

.card {
	container: card / inline-size;
	display: flex;
	flex-flow: column;
	outline: 2px solid var(--colour-border-neutral-subtle);
	border-radius: var(--border-radius-normal);
	transition: outline var(--transition-linear-fast), opacity var(--transition-linear-medium);
}

.card:has(button:is(:hover, :focus-visible)) {
	outline-color: var(--colour-border-neutral-bold);
}

.card .banner {
	padding: 0 1.25rem;
	display: flex;
	align-items: center;
	font-size: 0.875rem;
	font-weight: 600;
	color: var(--colour-ui-accent-subtle);
	background-color: var(--colour-fill-accent-subtle);
	border-radius: var(--border-radius-normal) var(--border-radius-normal) 0 0;
	height: 2rem;
}

.card .wrapper {
	display: grid;
	grid-template-columns: 1fr;
	grid-auto-rows: auto 1fr;
	column-gap: 1.25rem;
	row-gap: 1.25rem;
	padding: 1.25rem;
	flex-grow: 1;
}

.card .wrapper:has(> button) {
	grid-auto-rows: auto auto 1fr;
}

.card .wrapper>.heading {
	/* .icon-and-label-container styles */
	--icon-size: 1.25rem;
	--label-size: 1.125rem;
	--label-weight: 600;
	gap: 0.75rem;

	font-size: 1.25rem;
	font-weight: 600;
	margin: 0;
	padding: 0 0 0.5rem;
	border-bottom: 2px solid var(--colour-border-neutral-subtle);

	/* TODO: Ellipsis hide headings over two lines? */

}

.card .wrapper>button {
	place-self: end start;
	width: 100%;
}

@container card (max-width: 300px) {

	.card :is(.date-completed, .date-created) dd .time {
		display: none;
	}

	.card :is(.date-modified, .date-exported) dd .year {
		display: none;
	}

}

@container card (min-width: 460px) {
	.card>.wrapper {
		grid-template-columns: 1fr auto;
		grid-template-rows: auto auto;
		row-gap: 0.75rem;
	}

	.card .heading {
		grid-column: span 2;
	}

	.card button {
		place-self: end;
	}
}


/*
** DETAIL LISTS
------------------------------*/

dl {
	display: flex;
	flex-flow: column;
	gap: 0.75rem;
	margin: 1.75rem 0;
	line-height: 1.2;
}

dl :is(dt, dd) {
	font-size: 1rem;
}

dl[data-fit="compact"] {
	gap: 0.5rem;
	margin: 0.5rem 0;
}

dl[data-fit="compact"] :is(dt, dd) {
	font-size: 0.875rem;
}

.detail-container {
	display: flex;
	flex-flow: row wrap;
	align-items: start;
	column-gap: 0.5rem;
	row-gap: 0.25rem;
}

dl dt {
	font-weight: 600;
}

dl dd {
	margin: 0;
	color: var(--colour-ui-neutral-subtle);
}






/*
** FANCY LISTS
------------------------------*/

ol.fancy {
	list-style-type: none;
	padding: 0;
	display: flex;
	flex-flow: column;
	gap: 0.75rem;
	margin: 2rem 0;
}

ol.fancy li {
	counter-increment: fancy-ol;
	display: flex;
	flex-flow: row nowrap;
	align-items: start;
	gap: 0.5rem;
}

ol.fancy li::before {
	content: counter(fancy-ol);
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: var(--colour-fill-accent-bold, var(--colour-fill-neutral-bold));
	border-radius: var(--border-radius-small);
	padding: 0 0.5rem;
	font-size: 1.25rem;
	font-weight: 600;
	color: var(--colour-ui-reverse);
	height: 3rem;
	min-width: 3rem;
}

ol.fancy li .text {
	display: flex;
	align-items: center;
	padding: 0.5rem 1rem;
	min-height: 3rem;
	background-color: var(--colour-fill-accent-subtle, var(--colour-fill-neutral-subtle));
	border-radius: var(--border-radius-small);
	flex-grow: 1;
	font-size: 1.5rem;
	font-weight: 500;
	line-height: 1.2;
}

/* CHECKLIST */

ul.checklist {
	list-style-type: none;
	padding: 0;
	display: flex;
	flex-flow: column;
	gap: 0.75rem;
	margin: 2rem 0;
}

ul.checklist li {
	display: flex;
	flex-flow: row nowrap;
	align-items: start;
	gap: 1.25rem;
}

ul.checklist li>.icon.checkmark {
	--icon-size: 1rem;
	--icon-colour: var(--colour-ui-accent, var(--colour-ui-neutral));
	margin-top: 0.5rem;
}



/*
** DISCLOSURES
------------------------------*/


details {
	/* strip defaults */
	margin: 0;
	padding: 0;
	border: 0;
}

summary {
	display: inline-flex;
	/* no list marker */
	flex-flow: row nowrap;
	align-items: center;
	gap: 0.75rem;
	list-style: none;
	height: 2.5rem;
	margin: 0;
	padding: 0;
	background-color: transparent;
	border-radius: var(--border-radius-normal);
	position: relative;
	cursor: pointer;
	user-select: none;
	font-weight: 700;
	transition: background-color var(--transition-linear-fast), padding var(--transition-ease-medium);
}

summary:is(:hover, :focus-visible) {
	background-color: var(--colour-fill-accent-subtle, var(--colour-fill-neutral-subtle));
	padding: 0 1rem;
}

/* hide WebKit marker */
summary::-webkit-details-marker {
	display: none;
}

summary .icon {
	--icon-size: 0.875rem;
	--icon-colour: var(--colour-ui-accent-subtle);
	transition: rotate var(--transition-ease-medium);
}

details[open] summary .icon {
	rotate: x 180deg;
}

summary::after {
	content: "";
	display: block;
	position: absolute;
	left: 0;
	bottom: -0.5rem;
	height: 1px;
	width: 100%;
	background-color: transparent;
	transition: background-color var(--transition-linear-fast);
}

details[open] summary::after {
	background-color: var(--colour-border-accent-subtle);
}

details .contents {
	margin: 1rem 0 0;
}



/*
** LABEL CONTAINER
------------------------------*/

.label-group {
	display: flex;
	flex-flow: row wrap;
	align-items: center;
	gap: 0.5rem;
}

.label-container {
	display: inline-flex;
	align-items: center;
	font-size: var(--label-size, 0.875rem);
	font-weight: var(--label-weight, 600);
	color: var(--label-colour, var(--colour-ui-neutral));
	line-height: 1.2;
	transition: color var(--transition-linear-fast);
}

.label-container:is([data-style="solid"], [data-style="outline"], [data-style="solid-outline"]) {
	--label-colour: var(--colour-ui-accent, var(--colour-ui-neutral));
	height: 1.75rem;
	padding: 0 0.5rem;
	border-radius: var(--label-border-radius, var(--border-radius-small));
}

.label-container[data-style="solid"] {
	background-color: var(--colour-fill-accent-subtle, var(--colour-fill-neutral-subtle));
}

.callout[data-style="solid"] .label-container[data-style="solid"] {
	background-color: var(--colour-background);
}

.label-container[data-style="outline"] {
	background-color: transparent;
	border: 1px solid var(--colour-border-accent-bold, var(--colour-border-neutral-bold));
}

.label-container[data-style="solid-outline"] {
	background-color: var(--colour-fill-accent-subtle, var(--colour-fill-neutral-subtle));
	border: 1px solid var(--colour-border-accent-bold, var(--colour-border-neutral-bold));
}

/* TODO: Apply this to button style as well */

.label-container[data-restrict-length] .label {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	max-width: 14rem;
}

.label-container[data-restrict-length="short"] .label {
	max-width: 8rem;
}

.label-container.export-status {
	--label-weight: 400;
	--label-colour: var(--colour-ui-accent, var(--colour-ui-neutral));
}


/*
** ICON AND LABEL CONTAINER
------------------------------*/

.icon-and-label-container {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	flex-shrink: 0;
	gap: var(--container-gap, 0.5rem);
	background-color: var(--container-background-colour, transparent);
	border-radius: var(--container-border-radius, 0);
	padding: var(--container-padding, 0);
	transition:
		background-color var(--transition-linear-fast),
		padding var(--transition-ease-medium);
}

/* COLLAPSIBLE LABEL */

.icon-and-label-container[data-collapsible] {
	gap: 0;
	pointer-events: auto;
}

.icon-and-label-container[data-collapsible="label"] {
	padding-right: 0;
}

@media (prefers-reduced-motion) {
	.icon-and-label-container[data-collapsible] {
		transition: background-color var(--transition-linear-fast);
	}
}

.icon-and-label-container[data-collapsible]:is(:hover, :focus-visible) {
	padding-right: var(--container-padding, 0);
}

.icon-and-label-container[data-collapsible="label"] .label-container {
	display: grid;
	grid-template-columns: 0fr;
	opacity: 0;
	white-space: nowrap;
	transition: opacity var(--transition-linear-medium), grid-template-columns var(--transition-ease-medium);
}

@media (prefers-reduced-motion) {
	.icon-and-label-container[data-collapsible="label"] .label-container {
		transition: opacity var(--transition-linear-medium);
	}
}

.icon-and-label-container[data-collapsible="label"]:is(:hover, :focus-visible) .label-container {
	grid-template-columns: 1fr;
	opacity: 1;
}

.icon-and-label-container[data-collapsible="label"] .label-container .label {
	display: inline-block;
	overflow: hidden;
	transition: padding var(--transition-ease-medium);
}

.icon-and-label-container[data-collapsible="label"]:is(:hover, :focus-visible) .label-container .label {
	padding-left: 0.5rem;
}

/* COLLAPSIBLE ICON */

.icon-and-label-container[data-collapsible="icon"] .icon-container {
	display: flex;
	width: 0;
	opacity: 0;
	overflow: hidden;
	flex-shrink: 0;
	transition: opacity var(--transition-linear-medium), width var(--transition-ease-medium), margin var(--transition-ease-medium);
}

@media (prefers-reduced-motion) {
	.icon-and-label-container[data-collapsible="icon"] .icon-container {
		transition: opacity var(--transition-linear-medium);
	}
}

.icon-and-label-container[data-collapsible="icon"]:is(:hover, :focus-visible) .icon-container {
	width: var(--icon-size);
	margin-left: var(--container-padding);
	opacity: 1;
}

.icon-and-label-container[data-collapsible="icon"]:is(:hover, :focus-visible) .icon-container .icon {
	display: inline-block;
	flex-shrink: 0;
}

/*
** MEDIA
------------------------------*/

svg {
	pointer-events: none;
}

.icon {
	width: var(--icon-size, 1.5rem);
	flex-shrink: 0;
}

.icon path {
	fill: var(--icon-colour, var(--colour-ui-neutral));
	transition: fill var(--transition-linear-fast);
}

video {
	aspect-ratio: 16 / 9;
	width: 100%;
	background-color: var(--colour-fill-neutral-subtle);
}

audio {
	width: 100%;
}

iframe {
	aspect-ratio: 16 / 9;
	width: 100%;
}




/*
** MISC
------------------------------*/

hr {
	border: none;
}

:is(hr, .separator, [role="separator"]) {
	--separator-long-edge-dimension: 100%;
	--separator-short-edge-dimension: 1px;

	flex-shrink: 0;
	margin: 0;
	width: var(--separator-long-edge-dimension);
	height: var(--separator-short-edge-dimension);
	background-color: var(--separator-colour, var(--colour-border-neutral-subtle));
}

:is(hr, .separator, [role="separator"]):is([data-orientation="vertical"], [aria-orientation="vertical"]) {
	--separator-long-edge-dimension: auto;
	width: var(--separator-short-edge-dimension);
	height: var(--separator-long-edge-dimension);
}

hr.section {
	margin: 4rem 0;
}

/* Use <div role="separator" aria-orientation="vertical"></div> for 'meaningful separators' vertical separators */

span.highlight {
	background-color: var(--highlight-background-colour, var(--colour-highlight-fill));
	color: var(--highlight-ui-colour, var(--colour-highlight-ui));
	transition: background-color var(--transition-linear-fast), color var(--transition-linear-fast);
}

.visually-hidden {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}


/*
** STATES
------------------------------*/

[hidden] {
	pointer-events: none !important;
	display: none !important;
}

:focus-visible {
	outline: var(--theme-outlineColour) solid 2px;
	outline-offset: 2px;
}